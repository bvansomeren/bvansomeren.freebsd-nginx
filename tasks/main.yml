---
# tasks file for bvansomeren.freebsd-nginx

- name: ensure nginx is installed
  package:
    name: "{{ nginx_package }}"
    state: present

- name: ensure nginx enabled in rc.conf
  command: sysrc -f /etc/rc.conf nginx_enable=YES
  register: sysrc_changed
  changed_when:  '"YES -> YES" not in sysrc_changed.stdout'

- name: ensure nginx.conf is setup properly
  template:
    src: nginx.conf
    dest: "{{ nginx_config_folder }}/nginx.conf"
  notify: restart nginx

- name: ensure letsencrypt-acme-challenge.conf is setup
  template:
    src: letsencrypt-acme-challenge.conf
    dest: "{{ nginx_config_folder }}/letsencrypt-acme-challenge.conf"
  notify: restart nginx
  when: nginx_letsencrypt_enabled

- name: ensure letsencrypt-acme-stateless.conf  is setup
  template:
    src: letsencrypt-acme-stateless.conf
    dest: "{{ nginx_config_folder }}/letsencrypt-acme-stateless.conf"
  notify: restart nginx
  when: nginx_letsencrypt_stateless

- name: ensure vhost and ssl folders exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - "{{ nginx_include_folder }}"
  - "{{ nginx_ssl_folder }}"

- name: ensure generation of strong dhparam.pem
  command: "openssl dhparam -out {{ nginx_ssl_folder }}/dhparam.pem 4096"
  args:
    creates: "{{ nginx_ssl_folder }}/dhparam.pem"
  when: nginx_ssl_generate_dhparam

- name: ensure copy of strong dhparam.pem
  copy:
    src: dhparam.pem
    dest: "{{ nginx_ssl_folder }}/dhparam.pem"
  when: not nginx_ssl_generate_dhparam

- name: ensure vhosts are setup
  include_tasks: vhost.yml
  vars:
    vhost: "{{ item }}"
  with_items:
  - "{{ vhosts }}"
  notify: restart nginx

- name: ensure nginx is started
  service:
    name: nginx
    state: started

